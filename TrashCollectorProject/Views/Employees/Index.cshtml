@model TrashCollectorProject.Models.EmployeeViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-bottom:10px">
    <h1>Good Morning, @Model.Employee.Name</h1>
</div>

<div class="row">
    <div class="col-sm-6">
        <h3>Customer pickups in your area today</h3>
    </div>
    <div class="col-sm-6" style="text-align:right">
        <a asp-action="CustomerDatabase">Customer Database</a>
    </div>
</div>

<table class="table">
    <thead>
        <tr class="table-primary">
            <th>Customer Name </th>
            <th>Street Address</th>
            <th>City</th>
            <th>State</th>
            <th>Zip</th>
            <th>One Time Pickup?</th>
            <th>Weekly Pickup Status</th>
            <th>Options</th>
        </tr>
    </thead>

    @if (Model.Customers.Count > 0)
    {
        <tbody>
            @foreach (var customer in Model.Customers)
            {
                <tr class="table-light">
                    <td>
                        @customer.Name
                    </td>
                    <td>
                        @customer.Address.StreetAddress
                    </td>
                    <td>
                        @customer.Address.City
                    </td>
                    <td>
                        @customer.Address.State
                    </td>
                    <td>
                        @customer.Address.Zip
                    </td>
                    <td>
                        @if (customer.Service.OneTimePickup.HasValue && customer.Service.OneTimePickup.Value.Date == DateTime.Now.Date)
                        {
                            @:True
                        }
                        else
                        {
                            @:False
                        }
                    </td>
                    <td>
                        @if (@customer.Service.PickedUp)
                        {
                            @: Picked Up
                        }
                        else
                        {
                            @:Awaiting Pickup
                        }
                    </td>
                    <td>
                        @if (!@customer.Service.PickedUp || customer.Service.OneTimePickup.HasValue && customer.Service.OneTimePickup.Value.Date == DateTime.Now.Date)
                        {
                            @Html.ActionLink("Confirm Pickup", "ConfirmPickup", new { id = customer.IdentityUser.Id }) @:|
                        }

                        @Html.ActionLink("Customer Details", "CustomerDetails", new { id = customer.IdentityUser.Id })
                    </td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <tr>
            <td>
                There are no customers today.
            </td>
        </tr>
    }
</table>


<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>
<script>
var geocoder;
  var map;
  function initialize() {
    geocoder = new google.maps.Geocoder();
    var mapOptions = {
      zoom: 17,
    }
      map = new google.maps.Map(document.getElementById('map'), mapOptions);
      codeAddress();
  }

    function codeAddress() {

    var addresses = [];
        @foreach(var customer in Model.Customers)
        {
            @:addresses.push("@customer.Address.StreetAddress + @customer.Address.City + @customer.Address.State + @customer.Address.Zip")
        }
      for (i = 0; i < @Model.Customers.Count; i++) {
          var address = addresses[i];
          geocoder.geocode({ 'address': address }, function (results, status) {
              if (status == 'OK') {
                  map.setCenter(results[0].geometry.location);
                  var marker = new google.maps.Marker({
                      map: map,
                      position: results[0].geometry.location
                  });
              } else {
                  alert('Geocode was not successful for the following reason: ' + status);
              }
          });
      }
    }</script>
@if (Model.Customers.Count > 0)
{
    <h3>Map View</h3>
    <body onload="initialize()">
        <div id="map" style="width: 700px; height: 480px;"></div>
    </body>
}
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key= + @KeyVariables.Key">
</script>


<div>
    <a asp-action="Index">Back to Dashboard</a>
</div>