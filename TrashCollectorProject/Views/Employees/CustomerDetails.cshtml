@model TrashCollectorProject.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px; /* The height is 400 pixels */
            width: 100%; /* The width is the width of the web page */
        }
    </style>
</head>

<h1>Customer Details</h1>

<div>
    <h4>Customer</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.StreetAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.StreetAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.City)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.City)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.State)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.State)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address.Zip)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.Zip)
        </dd>
        @if (Model.Service.OneTimePickup.HasValue)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Service.OneTimePickup)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Service.OneTimePickup)
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Service.isActive)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Service.isActive)
        </dd>
        @if (!Model.Service.isActive)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Service.SuspensionStart)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Service.SuspensionStart.Value.Date)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Service.SuspensionEnd)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Service.SuspensionEnd.Value.Date)
            </dd>
        }
    </dl>
</div>
<h3>Map View</h3>
<script>
var geocoder;
  var map;
  function initialize() {
    geocoder = new google.maps.Geocoder();
    var mapOptions = {
      zoom: 17,
    }
      map = new google.maps.Map(document.getElementById('map'), mapOptions);
      codeAddress();
  }

  function codeAddress() {
    var address = "@Model.Address.StreetAddress + @Model.Address.City + @Model.Address.State + @Model.Address.Zip";
    geocoder.geocode( { 'address': address}, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }</script>
<body onload="initialize()">
    <div id="map" style="width: 700px; height: 480px;"></div>
</body>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key= + @KeyVariables.Key">
</script>


<div>
    <a asp-action="Index">Back to Dashboard</a>
</div>